{"version":3,"sources":["components/CurrentSetting.js","components/FormContents.js","components/LEDForm.js","components/Footer.js","components/Home.js","serviceWorker.js","index.js"],"names":["CurrentSetting","renderSettings","props","setting","mode","renderOff","renderColor","renderFade","renderFlash","name","style","display","margin","width","height","backgroundColor","color","borderColor","borderStyle","borderWidth","currentSettingCSS","borderRadius","window","innerWidth","this","React","Component","FormContents","formSubmission","type","fadeType","sendFormCallback","activeForm","current","value","toUpperCase","renderForm","renderCompletedForm","renderGenericForm","renderColorPickerForm","renderFadeForm","descriptions","createRef","index","className","ref","placeholder","defaultValue","waves","onClick","s","sx","m","changeFormCallback","isLoading","LEDForm","changeForm","form","state","setState","sendForm","axios","post","apiDomain","then","clickedButton","fontSize","unclickedButton","Footer","href","styles","header","Home","getCurrentMode","get","res","console","log","data","currentMode","loadingCurr","setInterval","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.92b685d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/CurrentSetting.css';\r\nimport {Container, Row, Col} from 'react-materialize';\r\n\r\nclass CurrentSetting extends React.Component {  \r\n    constructor() {\r\n        super();\r\n        this.currentSettingCSS = {\r\n            margin: \"2rem auto\",\r\n            borderColor: \"white\",\r\n            backgroundColor: \"#10131a\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"3px\",\r\n            borderRadius: \"10px\",\r\n            width: window.innerWidth > 400 ? \"55%\" : \"75%\",\r\n            height: \"125px\",\r\n        }\r\n    }\r\n\r\n    renderSettings = () => {\r\n        switch(this.props.setting.mode) {\r\n            case -2: return(\"loading...\");\r\n            case -1: return this.renderOff();\r\n            case 0: return this.renderColor();\r\n            case 1: return this.renderFade();\r\n            case 2: return this.renderFlash();\r\n            default: return(\"loading...\");\r\n        }\r\n        \r\n    }\r\n\r\n    renderOff = () => {\r\n        return (\r\n            <div>\r\n                <div>Mode: Off</div>\r\n                <div>Sender: {this.props.setting.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderColor = () => {\r\n        return (\r\n            <div>\r\n                <div><u>Mode</u>: Solid Color</div>\r\n                <div style={{display: \"inline-block\"}}>\r\n                    Color: \r\n                    <div style={{margin: \"0 5px\", width: \"15px\", height: \"15px\", display: \"inline-block\", backgroundColor: this.props.setting.color, borderColor: \"white\", borderStyle: \"solid\", borderWidth: \"1px\"}}></div>\r\n                </div>\r\n                <div>Sender: {this.props.setting.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderFade = () => {\r\n        return (\r\n            <div>\r\n                <div>Mode: Rainbow Fade</div>\r\n                <div>Message: {this.props.setting.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderFlash = () => {\r\n        return (\r\n            <div>\r\n                <div><u>Mode</u>: Flashing</div>\r\n                <div style={{display: \"inline-block\"}}>\r\n                    <u>Color</u>: \r\n                    <div style={{margin: \"0 5px\", width: \"15px\", height: \"15px\", display: \"inline-block\", backgroundColor: this.props.setting.color, borderColor: \"white\", borderStyle: \"solid\", borderWidth: \"1px\"}}></div>\r\n                </div>\r\n                <div><u>Sender</u>: {this.props.setting.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.currentSettingCSS}>\r\n                <Row style={{margin: \".5rem\"}}>\r\n                    <h6>Current Setting</h6>    \r\n                </Row>\r\n                <Row>\r\n                    {this.renderSettings()}       \r\n                </Row>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrentSetting;","import React from 'react';\r\nimport {Button, Row, Col, Container} from 'react-materialize';\r\nimport '../css/FormContents.css'\r\n\r\nclass FormContents extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.descriptions = [\r\n            \"turn off the lights\",\r\n            \"set the lights to a specific color\",\r\n            \"a nice gradient of colors\",\r\n            \"do not use this one\"\r\n        ]\r\n\r\n        this.name = React.createRef();\r\n        this.color = React.createRef();\r\n    }\r\n\r\n    formSubmission = (type, fadeType) => {\r\n        if (type === 0) {\r\n          this.props.sendFormCallback(\r\n              this.props.activeForm,\r\n              this.name.current.value === \"\" ? \"\" : this.name.current.value\r\n          );\r\n        }else if (type === 1) {\r\n          this.props.sendFormCallback(\r\n              this.props.activeForm, \r\n              this.name.current.value === \"\" ? \"\" : this.name.current.value,\r\n              this.color.current.value.toUpperCase()\r\n          );\r\n        }else if (type === 2) {\r\n          this.props.sendFormCallback(\r\n            this.props.activeForm,\r\n            this.name.current.value === \"\" ? \"\" : this.name.current.value,\r\n            null,\r\n            fadeType\r\n          )\r\n        }\r\n    }\r\n\r\n    renderForm = () => {\r\n        switch(this.props.activeForm) {\r\n            case -3: return this.renderCompletedForm();\r\n            case -2: return <p></p>\r\n            case -1: return this.renderGenericForm();\r\n            case 0: return this.renderColorPickerForm();\r\n            case 1: return this.renderFadeForm();\r\n            case 2: return this.renderGenericForm();\r\n            default: return <p>There has been an error</p>\r\n        }\r\n    }\r\n\r\n    renderGenericForm() {\r\n        let index = this.props.activeForm + 1;\r\n\r\n        return(\r\n            <div className=\"FormContents\">\r\n                <Row>\r\n                    <h6>{this.descriptions[index]}</h6>\r\n                </Row>\r\n                <Row>\r\n                    Message: <input style={{margin: \"0 1rem\", width: \"25%\", color: \"white\"}} ref={this.name} type=\"text\" placeholder=\"hi\" defaultValue=\"\"/> \r\n                </Row>\r\n                <Row>\r\n                    <Button style={{backgroundColor: \"#10131a\", borderStyle: \"solid\", borderWidth: \"1px\"}} \r\n                        waves=\"green\" \r\n                        onClick={() => this.formSubmission(0)}>\r\n                        Submit\r\n                    </Button>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderColorPickerForm() {\r\n        let index = this.props.activeForm + 1;\r\n        return(\r\n            <div className=\"FormContents\">\r\n                <Row>\r\n                    <h6>{this.descriptions[index]}</h6>\r\n                </Row>\r\n                <Row>\r\n                    Message: <input style={{margin: \"0 1rem\", width: \"25%\", color: \"white\"}} ref={this.name} type=\"text\" placeholder=\"colors\" defaultValue=\"\"/> \r\n                </Row>\r\n                <Row>\r\n                    Color: <input style={{margin: \"0 1rem\"}} ref={this.color} type=\"color\" defaultValue=\"#FFFFFF\"/> \r\n                </Row>\r\n                <Row>\r\n                    <Button style={{backgroundColor: \"#10131a\", borderStyle: \"solid\", borderWidth: \"1px\"}} \r\n                        waves=\"green\" \r\n                        onClick={() => this.formSubmission(1)}>\r\n                        Submit\r\n                    </Button>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderFadeForm() {\r\n      let index = 2;\r\n      return(\r\n        <div className=\"FormContents\">\r\n            <Row>\r\n                <h6>{this.descriptions[index]}</h6>\r\n            </Row>\r\n            <Row>\r\n                Message: <input style={{margin: \"0 1rem\", width: \"25%\", color: \"white\"}} ref={this.name} type=\"text\" placeholder=\"rainbow stuff\" defaultValue=\"\"/> \r\n            </Row>\r\n            <Container>\r\n              <Row>\r\n                <Col s={1}/>\r\n                <Col s={1}/>\r\n                <Col s={3}>\r\n                  <Button sx={{ m: 0.5 }} style={{backgroundColor: \"#10131a\", borderStyle: \"solid\", borderWidth: \"1px\"}} \r\n                    waves=\"green\" \r\n                    onClick={() => this.formSubmission(2, 0)}>\r\n                    Rainbow\r\n                  </Button>\r\n                </Col>\r\n                <Col s={3}>\r\n                  <Button sx={{ m: 0.5 }} style={{backgroundColor: \"#10131a\", borderStyle: \"solid\", borderWidth: \"1px\"}} \r\n                    waves=\"green\" \r\n                    onClick={() => this.formSubmission(2, 1)}>\r\n                    Cool\r\n                  </Button>\r\n                </Col>\r\n                <Col s={3}>\r\n                  <Button  style={{backgroundColor: \"#10131a\", borderStyle: \"solid\", borderWidth: \"1px\"}} \r\n                    waves=\"green\" \r\n                    onClick={() => this.formSubmission(2, 2)}>\r\n                    Warm\r\n                  </Button>\r\n                </Col>\r\n                <Col s={1}/>\r\n              </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n    }\r\n\r\n    renderCompletedForm() {\r\n        return(\r\n            <div className=\"FormContents\">\r\n                <Row>\r\n                    <h5>Form submitted!</h5>\r\n                </Row>\r\n                <Row>\r\n                    <h6>Give a few second for the LEDs settings to update</h6>\r\n                </Row>\r\n                <Row>\r\n                    <Button style={{backgroundColor: \"#10131a\", borderStyle: \"solid\", borderWidth: \"1px\"}} \r\n                        waves=\"green\" \r\n                        onClick={() => this.props.changeFormCallback(-2)}>\r\n                        OK\r\n                    </Button>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.props.isLoading ? <div>Sending...</div> : this.renderForm();\r\n    }\r\n}\r\n\r\nexport default FormContents;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Container, Button, Col, Row} from 'react-materialize';\r\nimport FormContents from './FormContents';\r\n\r\nclass LEDForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeForm: -2,\r\n            isLoading: false\r\n        };\r\n        this.apiDomain = \"https://remote-leds.herokuapp.com/queue\";\r\n    }\r\n\r\n    changeForm = (form) => {\r\n        if(!this.state.isLoading) {\r\n            this.setState({\r\n                activeForm: form\r\n            });\r\n        }\r\n    }\r\n\r\n    sendForm = (mode, name, color = null, fadeType = null) => {\r\n        this.setState({isLoading: true});\r\n\r\n        if(color) { //Form with color\r\n            axios.post(this.apiDomain + \"/enqueue/\", {\r\n                mode: mode,\r\n                name: name,\r\n                color: color\r\n            }).then(() => \r\n                this.setState({\r\n                    isLoading: false, \r\n                    activeForm: -3\r\n                })\r\n            );\r\n        }else if(fadeType) {\r\n          axios.post(this.apiDomain + \"/enqueue/\", {\r\n            mode: mode,\r\n            name: name,\r\n            type: fadeType,\r\n          }).then(() => {\r\n            this.setState({\r\n              isLoading: false,\r\n              activeForm: -3\r\n            })\r\n          })\r\n        }else{ //Basic form with no other properties\r\n            axios.post(this.apiDomain + \"/enqueue/\", {\r\n                mode: mode,\r\n                name: name\r\n            }).then(() => \r\n                this.setState({\r\n                    isLoading: false,\r\n                    activeForm: -3\r\n                })\r\n            );\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let clickedButton = {\r\n            color: \"lightblue\",\r\n            width: \"100%\",\r\n            height: \"50px\",\r\n            backgroundColor: \"#10131a\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"3px\",\r\n            borderRadius: \"5px\",\r\n            fontSize: \"16pt\"\r\n        }\r\n\r\n        let unclickedButton = {\r\n            color: \"white\",\r\n            width: \"80%\",\r\n            height: \"50px\",\r\n            backgroundColor: \"#10131a\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"1px\",\r\n            borderRadius: \"5px\",\r\n            fontSize: \"14pt\"\r\n        };\r\n\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col s={3}>\r\n                        <Button style={this.state.activeForm === -1 ? clickedButton : unclickedButton} waves=\"light\" onClick={() => this.changeForm(-1)}>\r\n                            {window.innerWidth > 400 ? \"Off\" : \"1\"}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col s={3}>\r\n                        <Button style={this.state.activeForm === 0 ? clickedButton : unclickedButton} waves=\"light\" onClick={() => this.changeForm(0)}>\r\n                            {window.innerWidth > 400 ? \"Solid Color\" : \"2\"}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col s={3}>\r\n                        <Button style={this.state.activeForm === 1 ? clickedButton : unclickedButton} waves=\"light\" onClick={() => this.changeForm(1)}>\r\n                            {window.innerWidth > 400 ? \"Fade\" : \"3\"}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col s={3}>\r\n                        <Button style={this.state.activeForm === 2 ? clickedButton : unclickedButton} waves=\"light\" onClick={() => this.changeForm(2)}>\r\n                            {window.innerWidth > 400 ? \"Strobe\" : \"4\"}\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <FormContents activeForm={this.state.activeForm} changeFormCallback={this.changeForm} sendFormCallback={this.sendForm} isLoading={this.state.isLoading}></FormContents>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LEDForm;","import React from 'react';\r\nimport '../css/Footer.css'\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"Footer\"> \r\n                <div className=\"FooterText\">\r\n                    Made by <a href=\"https://github.com/JoshGuo\">Joshua Guo</a> | Please don't break this &lt;3 \r\n                </div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport '../css/Home.css';\r\nimport axios from 'axios';\r\nimport {Container} from 'react-materialize';\r\nimport CurrentSetting from './CurrentSetting';\r\nimport LEDForm from './LEDForm';\r\nimport Footer from './Footer';\r\n\r\nconst styles = {\r\n  header: {\r\n    backgroundColor: '#10131a',\r\n    fontSize: 'calc(25pt + (50 - 25) * ((100vw - 300px) / (1920 - 300)))'\r\n  }\r\n}\r\n\r\nclass Home extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loadingCurr: true,\r\n            currentMode: {\r\n                mode: \"-1\",\r\n                name: \"default\"\r\n            }\r\n        }\r\n        this.apiDomain = \"https://remote-leds.herokuapp.com/queue\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCurrentMode();\r\n        setInterval(this.getCurrentMode, 5000);\r\n    }\r\n\r\n    getCurrentMode = () => {\r\n        axios.get(this.apiDomain).then((res) => {\r\n            console.log(res.data.currentMode);\r\n            this.setState({\r\n                loadingCurr: false,\r\n                currentMode: res.data.currentMode\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n              <div style={styles.header}>\r\n                <div style={{display:\"inline-block\"}}>\r\n                  led stuff\r\n                </div>\r\n              </div>\r\n              <Container>\r\n                <CurrentSetting isLoading={this.state.loadingCurr} setting={this.state.currentMode}/>\r\n                <LEDForm/>\r\n              </Container>\r\n              <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Home from './components/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}