{"version":3,"sources":["components/CurrentSetting.js","components/FormContents.js","components/LEDForm.js","components/Footer.js","components/Home.js","serviceWorker.js","index.js"],"names":["CurrentSetting","renderSettings","props","setting","mode","renderOff","renderColor","renderFade","name","style","display","margin","width","height","backgroundColor","color","borderColor","borderStyle","borderWidth","renderFlash","currentSettingCSS","borderRadius","window","innerWidth","this","React","Component","FormContents","formSubmission","type","sendFormCallback","activeForm","current","value","toUpperCase","renderForm","renderCompletedForm","renderGenericForm","renderColorPickerForm","descriptions","createRef","index","className","ref","placeholder","defaultValue","waves","onClick","changeFormCallback","isLoading","LEDForm","changeForm","form","state","setState","sendForm","axios","post","apiDomain","then","clickedButton","fontSize","unclickedButton","s","Footer","href","Home","getCurrentMode","get","res","console","log","data","currentMode","loadingCurr","setInterval","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.144d40da.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/CurrentSetting.css';\r\nimport {Container, Row, Col} from 'react-materialize';\r\n\r\nclass CurrentSetting extends React.Component {  \r\n    constructor() {\r\n        super();\r\n        this.currentSettingCSS = {\r\n            margin: \"2rem auto\",\r\n            borderColor: \"lightblue\",\r\n            backgroundColor: \"#10131a\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"3px\",\r\n            borderRadius: \"10px\",\r\n            width: window.innerWidth > 400 ? \"55%\" : \"75%\",\r\n            height: \"125px\",\r\n        }\r\n    }\r\n\r\n    renderSettings = () => {\r\n        switch(this.props.setting.mode) {\r\n            case -2: return(\"loading...\");\r\n            case -1: return this.renderOff();\r\n            case 0: return this.renderColor();\r\n            case 1: return this.renderFade();\r\n            case 2: return( \"flash\");\r\n            default: return(\"loading...\");\r\n        }\r\n        \r\n    }\r\n\r\n    renderOff = () => {\r\n        return (\r\n            <div>\r\n                <div><u>Mode</u>: Off</div>\r\n                <div><u>Sender</u>: {this.props.setting.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderColor = () => {\r\n        return (\r\n            <div>\r\n                <div><u>Mode</u>: Solid Color</div>\r\n                <div style={{display: \"inline-block\"}}>\r\n                    <u>Color</u>: \r\n                    <div style={{margin: \"0 5px\", width: \"15px\", height: \"15px\", display: \"inline-block\", backgroundColor: this.props.setting.color, borderColor: \"white\", borderStyle: \"solid\", borderWidth: \"1px\"}}></div>\r\n                </div>\r\n                <div><u>Sender</u>: {this.props.setting.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderFade = () => {\r\n        return (\r\n            <div>\r\n                <div><u>Mode</u>: Rainbow Fade</div>\r\n                <div><u>Sender</u>: {this.props.setting.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderFlash = () => {\r\n        return (\r\n            <div>\r\n                <div><u>Mode</u>: Flashing</div>\r\n                <div style={{display: \"inline-block\"}}>\r\n                    <u>Color</u>: \r\n                    <div style={{margin: \"0 5px\", width: \"15px\", height: \"15px\", display: \"inline-block\", backgroundColor: this.props.setting.color, borderColor: \"white\", borderStyle: \"solid\", borderWidth: \"1px\"}}></div>\r\n                </div>\r\n                <div><u>Sender</u>: {this.props.setting.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.currentSettingCSS}>\r\n                <Row style={{margin: \".5rem\"}}>\r\n                    <h6>---- Current Setting ----</h6>    \r\n                </Row>\r\n                <Row>\r\n                    {this.renderSettings()}       \r\n                </Row>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrentSetting;","import React from 'react';\r\nimport {Button, Row} from 'react-materialize';\r\nimport '../css/FormContents.css'\r\n\r\nclass FormContents extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.descriptions = [\r\n            \"Turns off the lights\",\r\n            \"Sets the lights to the specified color\",\r\n            \"Sets the lights to a rainbow fade\",\r\n            \"Sets the lights to flash the specified color (AKA wake me up in the middle of the night).\"\r\n        ]\r\n\r\n        this.name = React.createRef();\r\n        this.color = React.createRef();\r\n\r\n    }\r\n\r\n    formSubmission = (type) => {\r\n        if (type === 0) {\r\n            this.props.sendFormCallback(\r\n                this.props.activeForm,\r\n                this.name.current.value === \"\" ? \"Anon\" : this.name.current.value\r\n            );\r\n        }else if (type === 1) {\r\n            this.props.sendFormCallback(\r\n                this.props.activeForm, \r\n                this.name.current.value === \"\" ? \"Anon\" : this.name.current.value,\r\n                this.color.current.value.toUpperCase()\r\n            );\r\n        }\r\n    }\r\n\r\n    renderForm = () => {\r\n        switch(this.props.activeForm) {\r\n            case -3: return this.renderCompletedForm();\r\n            case -2: return <p></p>\r\n            case -1: return this.renderGenericForm();\r\n            case 0: return this.renderColorPickerForm();\r\n            case 1: return this.renderGenericForm();\r\n            case 2: return this.renderColorPickerForm();\r\n            default: return <p>There has been an error</p>\r\n        }\r\n    }\r\n\r\n    renderGenericForm() {\r\n        let index = this.props.activeForm + 1;\r\n\r\n        return(\r\n            <div className=\"FormContents\">\r\n                <Row>\r\n                    <h6>{this.descriptions[index]}</h6>\r\n                </Row>\r\n                <Row>\r\n                    Name: <input style={{margin: \"0 1rem\", width: \"25%\", color: \"white\"}} ref={this.name} type=\"text\" placeholder=\"Anonymous\" defaultValue=\"\"/> \r\n                </Row>\r\n                <Row>\r\n                    <Button style={{backgroundColor: \"#10131a\", borderStyle: \"solid\", borderWidth: \"1px\"}} \r\n                        waves=\"green\" \r\n                        onClick={() => this.formSubmission(0)}>\r\n                        Submit\r\n                    </Button>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderColorPickerForm() {\r\n        let index = this.props.activeForm + 1;\r\n        return(\r\n            <div className=\"FormContents\">\r\n                <Row>\r\n                    <h6>{this.descriptions[index]}</h6>\r\n                </Row>\r\n                <Row>\r\n                    Name: <input style={{margin: \"0 1rem\", width: \"25%\", color: \"white\"}} ref={this.name} type=\"text\" placeholder=\"Anonymous\" defaultValue=\"\"/> \r\n                </Row>\r\n                <Row>\r\n                    Color: <input style={{margin: \"0 1rem\"}} ref={this.color} type=\"color\" defaultValue=\"#FFFFFF\"/> \r\n                </Row>\r\n                <Row>\r\n                    <Button style={{backgroundColor: \"#10131a\", borderStyle: \"solid\", borderWidth: \"1px\"}} \r\n                        waves=\"green\" \r\n                        onClick={() => this.formSubmission(1)}>\r\n                        Submit\r\n                    </Button>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderCompletedForm() {\r\n        return(\r\n            <div className=\"FormContents\">\r\n                <Row>\r\n                    <h5>Form submitted!</h5>\r\n                </Row>\r\n                <Row>\r\n                    <h6>Give a few second for the LEDs settings to update</h6>\r\n                </Row>\r\n                <Row>\r\n                    <Button style={{backgroundColor: \"#10131a\", borderStyle: \"solid\", borderWidth: \"1px\"}} \r\n                        waves=\"green\" \r\n                        onClick={() => this.props.changeFormCallback(-2)}>\r\n                        OK\r\n                    </Button>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.props.isLoading ? <div>Sending...</div> : this.renderForm();\r\n    }\r\n}\r\n\r\nexport default FormContents;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Container, Button, Col, Row} from 'react-materialize';\r\nimport FormContents from './FormContents';\r\n\r\nclass LEDForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeForm: -2,\r\n            isLoading: false\r\n        };\r\n        this.apiDomain = \"https://remote-leds.herokuapp.com/queue\";\r\n    }\r\n\r\n    changeForm = (form) => {\r\n        if(!this.state.isLoading) {\r\n            this.setState({\r\n                activeForm: form\r\n            });\r\n        }\r\n    }\r\n\r\n    sendForm = (mode, name, color) => {\r\n        this.setState({isLoading: true});\r\n\r\n        if(color) { //Form with color\r\n            axios.post(this.apiDomain + \"/enqueue/\", {\r\n                mode: mode,\r\n                name: name,\r\n                color: color\r\n            }).then(() => \r\n                this.setState({\r\n                    isLoading: false, \r\n                    activeForm: -3\r\n                })\r\n            );\r\n        }else{ //Basic form with no other properties\r\n            axios.post(this.apiDomain + \"/enqueue/\", {\r\n                mode: mode,\r\n                name: name\r\n            }).then(() => \r\n                this.setState({\r\n                    isLoading: false,\r\n                    activeForm: -3\r\n                })\r\n            );\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let clickedButton = {\r\n            color: \"lightblue\",\r\n            width: \"100%\",\r\n            height: \"50px\",\r\n            backgroundColor: \"#10131a\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"3px\",\r\n            borderRadius: \"5px\",\r\n            fontSize: \"16pt\"\r\n        }\r\n\r\n        let unclickedButton = {\r\n            color: \"white\",\r\n            width: \"80%\",\r\n            height: \"50px\",\r\n            backgroundColor: \"#10131a\",\r\n            borderStyle: \"solid\",\r\n            borderWidth: \"1px\",\r\n            borderRadius: \"5px\",\r\n            fontSize: \"14pt\"\r\n        };\r\n\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col s={3}>\r\n                        <Button style={this.state.activeForm === -1 ? clickedButton : unclickedButton} waves=\"light\" onClick={() => this.changeForm(-1)}>\r\n                            {window.innerWidth > 400 ? \"Turn Off\" : \"1\"}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col s={3}>\r\n                        <Button style={this.state.activeForm === 0 ? clickedButton : unclickedButton} waves=\"light\" onClick={() => this.changeForm(0)}>\r\n                            {window.innerWidth > 400 ? \"Set Color\" : \"2\"}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col s={3}>\r\n                        <Button style={this.state.activeForm === 1 ? clickedButton : unclickedButton} waves=\"light\" onClick={() => this.changeForm(1)}>\r\n                            {window.innerWidth > 400 ? \"Rainbow\" : \"3\"}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col s={3}>\r\n                        <Button style={this.state.activeForm === 2 ? clickedButton : unclickedButton} waves=\"light\" onClick={() => this.changeForm(2)}>\r\n                            {window.innerWidth > 400 ? \"Flash\" : \"4\"}\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <FormContents activeForm={this.state.activeForm} changeFormCallback={this.changeForm} sendFormCallback={this.sendForm} isLoading={this.state.isLoading}></FormContents>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LEDForm;","import React from 'react';\r\nimport '../css/Footer.css'\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"Footer\"> \r\n                <div className=\"FooterText\">\r\n                    Made by <a href=\"https://github.com/JoshGuo\">Joshua Guo</a> | Please don't break this &lt;3 \r\n                </div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport '../css/Home.css';\r\nimport axios from 'axios';\r\nimport {Container} from 'react-materialize';\r\nimport CurrentSetting from './CurrentSetting';\r\nimport LEDForm from './LEDForm';\r\nimport Footer from './Footer';\r\n\r\nclass Home extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loadingCurr: true,\r\n            currentMode: {\r\n                mode: \"-1\",\r\n                name: \"default\"\r\n            }\r\n        }\r\n        this.apiDomain = \"https://remote-leds.herokuapp.com/queue\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCurrentMode();\r\n        setInterval(this.getCurrentMode, 5000);\r\n    }\r\n\r\n    getCurrentMode = () => {\r\n        axios.get(this.apiDomain).then((res) => {\r\n            console.log(res.data.currentMode);\r\n            this.setState({\r\n                loadingCurr: false,\r\n                currentMode: res.data.currentMode\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <Container>\r\n                    <div className=\"Header\">\r\n                        <div style={{display:\"inline-block\"}}>\r\n                            Change my LEDs :&gt;\r\n                        </div>\r\n                    </div>\r\n                    <CurrentSetting isLoading={this.state.loadingCurr} setting={this.state.currentMode}/>\r\n                    <LEDForm/>\r\n                </Container>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Home from './components/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}